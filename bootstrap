#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_DIR"

# Darwin/Linux
UNAME_S="$(uname -s)"
HOSTNAME_S="$(hostname -s)"
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
mkdir -p "$XDG_CONFIG_HOME"

git submodule update --init --recursive

for fname in "$SCRIPT_DIR"/.*; do
  [[ ! -f $fname ]] && continue # Skip non-files

  fname_src="$fname"
  fname_base=$(basename "$fname")
  fname_target="$HOME/$fname_base"

  if ! [[ "$fname_base" = *.json || "$fname_base" = *.conf || "$fname_base" = *.local ]]; then
    if [[ "$fname_base" =~ \..*\..* ]]; then
      echo >&2 "Skipping dotfile variant $fname"
      continue
    fi
  fi

  # Handle os-specific config files
  if [[ -f "$fname.$UNAME_S" ]]; then
    fname_src="$fname.$UNAME_S"
    echo >&2 "Using $fname_src for $fname"
  fi

  # Handle host-specific config files
  if [[ -f "$fname.$HOSTNAME_S" ]]; then
    fname_src="$fname.$HOSTNAME_S"
    echo >&2 "Using $fname_src for $fname"
  fi

  ln -vsfn "$fname_src" "$fname_target"
done

# Bash-completion
mkdir -p "$HOME/.local/share/"
rm -f "$HOME/.local/share/bash-completion"
ln -sfn "$SCRIPT_DIR/.local/share/bash-completion" "$HOME/.local/share/"

# For neovim
ln -sfn "$SCRIPT_DIR"/vim "$XDG_CONFIG_HOME/nvim"
ln -sfn "$SCRIPT_DIR"/.vimrc "$XDG_CONFIG_HOME/nvim/init.vim"

# Config dir
for dname in "$SCRIPT_DIR"/config/*; do
  dname_src="$dname"
  dname_base=$(basename "$dname")
  dname_target="$XDG_CONFIG_HOME/$dname_base"

  if [[ "$dname_base" =~ .*\..* ]]; then
    echo >&2 "Skipping config dir variant $dname"
    continue
  fi

  # Handle os-specific config files
  if [[ -d "$dname.$UNAME_S" ]]; then
    dname_src="$dname.$UNAME_S"
    echo >&2 "Using $dname_src for $dname"
  fi

  # Handle host-specific config files
  if [[ -d "$dname.$HOSTNAME_S" ]]; then
    dname_src="$dname.$HOSTNAME_S"
  fi

  ln -vsfn "$dname_src" "$XDG_CONFIG_HOME/$dname_base"
done

config_dirs=(
  .ctags.d
  .ipython
)

for config_dir in "${config_dirs[@]}"; do
  ln -sfn "$SCRIPT_DIR/$config_dir" "$HOME/$config_dir"
done

# Binaries
mkdir -p "$HOME"/bin
ln -sfn "$SCRIPT_DIR"/bin/* "$HOME"/bin/
for binfile in "${SCRIPT_DIR}/${UNAME_S}"/bin/*; do
  [[ ! -f "$binfile" ]] && continue
  ln -sfn "$binfile" "$HOME"/bin/"$(basename "$binfile")"
done

# Vim dir
rm -f "$HOME"/.vim
ln -sfn "$SCRIPT_DIR"/vim "$HOME"/.vim

# Vim plugins
nvim +PlugInstall! +qall

# Vim Remote plugins
nvim +UpdateRemotePlugins +qall

"$SCRIPT_DIR/install-helpers"
