#!/bin/bash
# shellcheck disable=SC2089,SC2090,2086

set -euo pipefail

if [[ -n ${DEBUG-} ]]; then
  set -x
fi

usage(){
  echo >&2 "Usage: SSH_PROXY_HOST=host SSH_USER=ec2-user $0 <TARGET_HOST> [<host args...>]"
  echo >&2
  echo >&2 "Environment Variables:"
  echo >&2 "SSH_PROXY_USER: SSH proxy host user for jump connection"
  echo >&2 "SSH_PROXY_HOST: SSH host configured in $HOME/.ssh/config, used as a jump box"
  echo >&2 "SSH_KEY: Name of the SSH key file located in $HOME/.ssh/. Default: $HOME/.ssh/\${SSH_PROXY_HOST}app.pem"
  echo >&2 "SSH_USER: SSH user account for the TARGET_HOST"
  echo >&2
  echo >&2 "Args:"
  echo >&2 "TARGET_HOST: Private IP of the target host. Usage: $0 host or $0 user@host"
  echo >&2 "Host Args (List, Optional): Optional list of arguments to pass to the SSH command."
}

is_jumpbox_disabled(){
  if [[ -n ${DISABLE_JUMPBOX-} ]]; then
    return 0
  fi

  curl -m 1 -fs http://169.254.169.254/latest/dynamic/instance-identity/document > /dev/null 2>&1
}

populate_args(){
  TARGET_HOST=${1-}

  # Check TARGET_HOST for user@host form
  IFS=" " read -r -a target_host_split <<< "${TARGET_HOST//@/ }"

  if [[ "${#target_host_split[@]}" -eq 2 ]]; then
    SSH_USER="${target_host_split[0]}"
    TARGET_HOST="${target_host_split[1]}"
  fi

  if [[ -z ${TARGET_HOST-} ]]; then
    usage
    exit 1
  fi

  SSH_KEY=${SSH_KEY:-${SSH_PROXY_HOST-}app.pem}
  SSH_KEY_FILE="${SSH_KEY_FILE:-$HOME/.ssh/${SSH_KEY}}"
  if [[ ! -f ${SSH_KEY_FILE} ]]; then
    echo >&2 "Unable to read SSH key file: ${SSH_KEY_FILE}"
    usage
    exit 1
  fi

  SSH_USER=${SSH_USER:-ec2-user}
  SSH_PROXY_USER=${SSH_PROXY_USER:-ec2-user}
}

populate_args "$@"

if is_jumpbox_disabled; then
  echo >&2 "Connecting to ${SSH_USER}@${TARGET_HOST} using key ${SSH_KEY_FILE}"
else
  if [[ -z ${SSH_PROXY_HOST-} ]]; then
    echo >&2 "SSH_PROXY_HOST is not set"
    usage
    exit 1
  fi
  SSH_PROXY_ARGS="-o 'ProxyCommand ssh -W %h:%p ${SSH_PROXY_USER}@${SSH_PROXY_HOST}'"
  echo >&2 "Connecting to ${SSH_USER}@${TARGET_HOST} using jumpbox ${SSH_PROXY_HOST} and key ${SSH_KEY_FILE}"
fi

ssh \
    -o ConnectTimeout=5 \
    -o ConnectionAttempts=1 \
    -o IdentitiesOnly=yes \
    -o StrictHostKeyChecking=no \
    ${SSH_PROXY_ARGS-} \
    -i "${SSH_KEY_FILE}" \
    "${SSH_USER}@${TARGET_HOST}" "${@:2}"
