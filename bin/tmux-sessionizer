#!/usr/bin/env bash

set -uo pipefail

if [[ ${DEBUG:-0} -eq 1 ]]; then
  set -x
fi

if [[ -z ${TMUX_DIR_BASES-} ]]; then
  echo >&2 "TMUX_DIR_BASES is not set"
  exit 1
fi

TS_CACHE="$HOME/.ts.cache"

# If -c is passed, clear the cache
if [[ "$#" -ge 1 && "$1" == "-c" ]]; then
  rm -f "$TS_CACHE"
  shift
fi

# Check if the file exists and remove it if it's older than 1 hour
if [[ -f "$TS_CACHE" ]]; then
  find "$TS_CACHE" -type f -mmin +60 -exec rm -f {} \;
fi

# Create the cache file if it doesn't exist
if [[ ! -f "$TS_CACHE" ]]; then
  { find $TMUX_DIR_BASES -type d -name '.git'; find $TMUX_DIR_BASES -type f -name '.git' -exec grep -l -v '/modules/' {} +; } | grep -v asdf | sed 's#/.git$##' > "$TS_CACHE"
fi

if [[ $# -eq 1 ]]; then
  selected=$(fzf -q "$1" < "$TS_CACHE")
else
  selected=$(fzf < "$TS_CACHE")
fi

if [[ -z $selected ]]; then
  exit 0
fi

selected_name=$(echo "$selected" | awk -F'/' '{gsub($0,".","_"); printf "%s/%s\n", $(NF-1), $NF}')
tmux_running=$(pgrep tmux)

# Brand new tmux / session
if [[ -z ${TMUX-} ]] && [[ -z ${tmux_running-} ]]; then
  tmux new-session -s $selected_name -c $selected
  exit 0
fi

if ! tmux has-session -t=$selected_name 2> /dev/null; then
  tmux new-session -ds $selected_name -c $selected
fi

if [[ -z ${TMUX-} ]]; then
  tmux attach -t $selected_name
else
  tmux switch-client -t $selected_name
fi
