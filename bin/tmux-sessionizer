#!/usr/bin/env bash

set -euo pipefail

if [[ ${DEBUG:-0} -eq 1 ]]; then
  set -x
fi

TS_CACHE="$HOME/.ts.cache"
TS_SMART_CACHE="$HOME/.ts.smart.cache"
TS_LIST="$TS_SMART_CACHE"
FILTER_CACHE='asdf|\.terraform/modules'

FZF_QUERY=""
FZF_PREVIEW_ARGS=()

usage(){
  cat >&2 <<EOF
Usage: tmux-sessionizer [-r] [-h] [FZF_QUERY]

Options:
  -a  Search active tmux sessions
  -r  Refresh the cache
  -h  Show this help message

Arguments:
  FZF_QUERY: Initial query to pass to fzf

Environment Variables:
  TMUX_DIR_BASES: Directories to search for tmux sessions
  FILTER_CACHE:   Exclude directories that match this regex from the cache
  DEBUG:          Set to 1 to enable debug mode
EOF
}

refresh_cache(){
  # Refresh cache if it's older than 60 minutes
  if [[ -f "$TS_CACHE" && -f "$TS_SMART_CACHE" ]]; then
    find "$TS_CACHE" "$TS_SMART_CACHE" -type f -mmin +300 -exec rm -f {} \;
  fi
}

if [[ -z ${TMUX_DIR_BASES-} ]]; then
  echo >&2 "TMUX_DIR_BASES is not set"
  usage
  exit 1
fi

# Parse arguments
while getopts ":ahr" opt; do
  case $opt in
    a)
      TS_LIST="/tmp/.ts.active"
      tmux list-sessions -F "#{session_name}" > "$TS_LIST"
      FZF_PREVIEW_ARGS=(
        --preview 'tmux capture-pane -J -p -e -t {}'
        --preview-window 'down:80%'
      )
      ;;
    h)
      usage
      exit 0
      ;;
    r)
      rm -f "$TS_CACHE" "$TS_SMART_CACHE"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

shift $((OPTIND-1))

if [[ $# -eq 1 ]]; then
  FZF_QUERY="$1"
fi

# Create the cache file if it doesn't exist
if [[ ! -f "$TS_CACHE" || ! -f "$TS_SMART_CACHE" ]]; then
  { find $TMUX_DIR_BASES -type d -name '.git'; find $TMUX_DIR_BASES -type f -name '.git' -exec grep -l -v '/modules/' {} +; } 2>/dev/null |\
    grep -Ev "$FILTER_CACHE" |\
    sed 's#/.git$##' > "$TS_CACHE"

  # Generate the sorted lists
  sorted_autojump_stat=$(autojump --stat | awk '/^[0-9]+.[0-9]:\s+\// {print $2}' | grep -x -f "$TS_CACHE")
  unmatched_entries=$(grep -vxFf <(echo "$sorted_autojump_stat") "$TS_CACHE" | sort)
  echo -e "$unmatched_entries\n$sorted_autojump_stat" | tac > "$TS_SMART_CACHE"
fi

# Use the sorted list with fzf
selected=$(fzf --select-1 --query="${FZF_QUERY-}" "${FZF_PREVIEW_ARGS[@]}" < "$TS_LIST")
if [[ -z $selected ]]; then
  exit 0
fi

refresh_cache &

selected_name=$(echo "$selected" |\
  sed "s#$HOME/##;s#.*\.com/##" |\
  awk -F'/' 'BEGIN{OFS="/"} {gsub(/\./, "_", $0)} NF >= 3 {print substr($1, 1, 4),$(NF-1),$NF}; NF < 3 {print $(NF-1),$NF}')
tmux_running=$(pgrep tmux)

# We are not inside tmux and tmux is not running
if [[ -z ${TMUX-} && -z ${tmux_running-} ]]; then
  # Start a new session and enter it
  tmux -2 new-session -s $selected_name -c $selected
  exit 0
fi

# Tmux is running. Check if session exists
if ! tmux has-session -t=$selected_name 2> /dev/null; then
  # Create the session and detach
  tmux -2 new-session -ds "$selected_name" -c "$selected"
fi

if [[ -z ${TMUX-} ]]; then
  # Attach to the session if outside tmux
  tmux -2 attach -t "$selected_name"
else
  # Switch the client to the session if inside tmux
  tmux -2 switch-client -t "$selected_name"
fi
