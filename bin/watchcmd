#!/bin/bash

if [[ $# -lt 2 ]]; then
    echo "Usage $0 WATCHDIR COMMAND"
    echo "This script runs then given command on a change to the specified directory"
    echo
    exit 1
fi

trap 'cleanup' SIGINT SIGTERM EXIT

JOBPID=()
WATCHDIR=$1
shift
COMMAND=$@

function cleanup(){
    for jpid in ${JOBPID[*]}; do
        if ( kill -0 $jpid 2> /dev/null ); then
            pkill -TERM -P $jpid && sleep 1

            if ( kill -0 $jpid 2> /dev/null ); then
                echo "KILL $jpid" && pkill -KILL -P $jpid && sleep 1
            fi
        fi
    done
}

function runcommand(){
    cleanup
    echo "Running Command $COMMAND"
    $COMMAND &
    JOBPID+=($!)
}

runcommand

#the command before the pipe is a blocking command, i.e. it doesn't end
inotifywait -q -m -r --format '%f' -e close_write $WATCHDIR | \
    while read fname; do
        if ( echo "$fname" | grep -E '.*(\.go)' > /dev/null ); then
            echo "File $fname modified"
            runcommand
        fi
    done
