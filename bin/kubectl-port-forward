#!/usr/bin/env bash

if [[ -n ${DEBUG-} ]]; then
  set -x
fi
set -eu -o pipefail

DIR="$(cd "$(dirname "$0")" && pwd)"
PATH="$DIR:$PATH"
export PATH

usage(){
  cat >&2 <<EOF
Usage: $0 [options]

OPTIONS
  -p
      Specify port numbers to forward
  -s
      Port forward the service name
  -h
      Display this usage message and exit

ENVIRONMENT VARIABLES
  KUBECONFIG
      Path to Kubernetes cluster config file

EOF
}

NS_FLAG=(--all-namespaces)

# Parse arguments
while getopts ":hn:p:s:" opt; do
  case "${opt}" in
    p)
      PORT="${OPTARG}"
      ;;
    n)
      NS_FLAG=(-n "${OPTARG}")
      ;;
    s)
      SERVICE="${OPTARG}"
      ;;
    h)
      usage
      exit
      ;;
    \?)
      usage
      exit 1
      ;;
  esac
done

if [[ ${OPTIND} -eq 1 ]]; then
  usage
  exit 1
fi

shift $((OPTIND -1))

: "${KUBECONFIG}"

get_service_list(){
  kubectl get "${NS_FLAG[@]}" services -o jsonpath='{range .items[*].metadata}{.namespace}{" "}{.name}{"\n"}{end}'
}

get_partial_matching_services(){
  local service_name
  service_name="$1"
  get_service_list | grep "$service_name"
}

get_matching_service(){
  local service_name
  service_name="$1"
  get_service_list | grep " ${service_name}$" || true
}

get_local_port(){
  local local_port
  local_port="$1"

  if [[ "$local_port" -lt 100 ]]; then
    local_port="${local_port}${local_port}" # 80 -> 8080
  fi

  while [[ "$local_port" -lt 1024 ]]; do
    local_port="8$local_port" # 443 -> 8443
  done

  echo "$local_port"
}

get_remote_port(){
  local remote_port
  remote_port="${1-}"

  if [[ -z ${remote_port-} ]]; then
    remote_port=$(kubectl get -n "$NAMESPACE" service "$SERVICE" -o jsonpath='{.spec.ports[].port}') # Grab the first port
    if [[ -z ${remote_port-} ]]; then
      echo >&2 "Cannot find port for service: $SERVICE in namespace $NAMESPACE" # No ports found!
    fi
  fi

  echo "$remote_port"
}

if [[ -n ${SERVICE-} ]]; then
  matching_service=$(get_matching_service "$SERVICE")

  if [[ -z ${matching_service-} ]]; then
    echo >&2 "Partially patching services:"
    get_partial_matching_services "$SERVICE"
    exit 1
  fi

  NAMESPACE=$(echo "$matching_service" | cut -d' ' -f1)
  SERVICE=$(echo "$matching_service" | cut -d' ' -f2)

  remote_port=$(get_remote_port "${PORT-}")
  local_port=$(get_local_port "$remote_port")

  echo >&2 "Forwarding service/$SERVICE in $NAMESPACE on ${local_port}:${remote_port}"

  open "http://localhost:${local_port}"

  while kubectl port-forward "service/$SERVICE" -n "$NAMESPACE" "${local_port}:${remote_port}"; do
    sleep 1
  done
fi
