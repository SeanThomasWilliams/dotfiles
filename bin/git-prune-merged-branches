#!/bin/bash

set -eu
set -o pipefail

delete_branch(){
  local branch_name
  branch_name=$1

  git branch -D "$branch_name"
  git push "$GIT_REMOTE" --delete "$branch_name"
}

DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
GIT_REMOTE=$(git remote | head -n 1)

git fetch --all --prune

# Prune branches that have already been merged with master
MERGED_BRANCHES=$(git branch --merged |\
  grep -v -E "\*|$DEFAULT_BRANCH" || true)
for branch in $MERGED_BRANCHES; do
  echo >&2 "Deleting merged branch: $branch"
  delete_branch "$branch"
done

# Rebased branches
REBASED_BRANCHES=$(git for-each-ref refs/heads/ "--format=%(refname:short)" |\
  grep -v "$DEFAULT_BRANCH" || true)

for branch in $REBASED_BRANCHES; do
  if ! git cherry "$DEFAULT_BRANCH" "$branch" | grep -q '^[^-]'; then
    echo >&2 "Deleting rebased branch $branch"
    delete_branch "$branch"
  fi
done

git gc --aggressive
