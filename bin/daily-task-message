#!/bin/bash

set -eu
set -o pipefail

create_message_for_project(){
  local project
  project=$1

  task_query="(status:pending and due < now+7d and project:${project} and -WAITING)"
  task_count=$(task "$task_query" export | jq -c '.[]' | wc -l)

  if [[ "$task_count" -eq 0 ]]; then
    if [[ "${DEBUG-}" -eq 1 ]]; then
      echo >&2 "No relevant tasks for ${project}!"
    fi

    return
  fi

  echo "Tasks for project $project:"
  task "$task_query" export |\
    jq -rc '.[] | [.urgency, .description]' |\
    tr -d '[]"' |\
    sort -rn |\
    cut -d',' -f2- |\
    awk '{gsub(/\\n/, "\n"); print NR") "$0}' |\
    tr -d '\\'
}

twilio_notify(){
  local message_body
  message_body="$*"

  if [[ "${DEBUG-}" -eq 1 ]]; then
    echo >&2 "$message_body"
    echo >&2
  else
    twilio-notify "$message_body"
  fi
}

notify_by_project(){
  task_projects="$(task _project)"

  for project in $task_projects; do
    project_message=$(create_message_for_project "$project")
    if [[ -n "${project_message-}" ]]; then
      twilio_notify "$project_message"
    fi
  done
}

taskrc_home=$(task _show | awk -F'=' '$1 == "data.location" {print $2}')
daily_task_message_log_file="$taskrc_home/daily-task-message.log"

exec >> "$daily_task_message_log_file" 2>&1

task rc.verbose=nothing sync || true

twilio_notify "Daily task summary for $(date '+%A, %B %_d')"
notify_by_project
