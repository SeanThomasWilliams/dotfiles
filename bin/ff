#!/usr/bin/env bash
# shellcheck disable=SC2068

set -eu -o pipefail

usage(){
  cat >&2 <<EOF
Find files matching a pattern

Usage: $0 [options] <FILE_NAME> [TARGET_DIR]

Arguments:
  FILE_NAME
    Partial file name
  TARGET_DIR
    Target directory to search within

Options:
  -a
    Search all files (even hidden files, except .git)
  -d
    Directory to search within (overridden by <TARGET_DIR>)
  -n
    Max directory depth to search
  -t
    Filetype (sh, py, etc)
  -h
    Show usage and exit
EOF
}

if [[ -n ${DEBUG-} ]]; then
  set -x
fi

DEFAULT_TARGET_DIR=(*)
TARGET_DIR=()
IGNORE_PATTERN='.*/\..*cache|.*/\.DS_Store|.*/\.git|.*/\.pnpm|.*/\.terraform|.*/mod|.*/node_modules|.*/vendor'

# Use longer getopt format for portability

# $@ is all command line parameters passed to the script.
# -o is for short options like -v
# -l is for long options with double dash like --version
# the comma separates different long options
# -a is for long options with single dash like -version
options=$(getopt -o "ad:n:t:hv" -l "all,dir:,name:,type:,help,verbose" -n "$0" -- "$@")

# set --:
# If no arguments follow this option, then the positional parameters are unset. Otherwise, the positional parameters
# are set to the arguments, even if some of them begin with a ‘-’.
eval set -- "$options"

while true; do
  case "$1" in
    -a|--all)
      IGNORE_PATTERN='.*/\.git'
      ;;
    -d|--dir)
      shift
      TARGET_DIR+=("$1")
      ;;
    -n|--name)
      shift
      MAX_DEPTH="$1"
      ;;
    -t|--type)
      shift
      FILE_TYPE="$1"
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    -v|--verbose)
      set -xv  # Set xtrace and verbose mode.
      ;;
    --)
      shift
      break;;
  esac
  shift
done

if [[ $# -ge 1 ]]; then
  FILE_NAME="$1"
  shift
fi

if [[ $# -ge 1 ]]; then
  TARGET_DIR+=("$@")
fi

# Construct FILE_GLOB
FILE_GLOB='*'
if [[ -n ${FILE_NAME-} ]]; then
  FILE_GLOB="*${FILE_NAME}*"
fi

if [[ -n ${FILE_TYPE-} ]]; then
  FILE_NAME="\.${FILE_TYPE}|${FILE_NAME-}"
  FILE_GLOB="${FILE_GLOB}.${FILE_TYPE}"
fi

if [[ -z ${TARGET_DIR-} ]]; then
  TARGET_DIR=("${DEFAULT_TARGET_DIR[@]}")
fi

# Set maxdepth if directed
FIND_GLOBAL_ARGS=(
  "${TARGET_DIR[@]}"
)

if [[ -n ${MAX_DEPTH-} ]]; then
  FIND_GLOBAL_ARGS+=(-maxdepth "$MAX_DEPTH")
fi

FIND_CMD=(
  find
  -L
  "${FIND_GLOBAL_ARGS[@]}"
  -regextype posix-egrep
  \!
  \( -type d -regex "$IGNORE_PATTERN" -prune \)
  \( -type f -o -type l \)
  -ipath "$FILE_GLOB"
  -printf '%p\n'
)

if [[ -n ${FILE_NAME-} ]]; then
  # Find relevant files and strip the leading './'
  "${FIND_CMD[@]}" 2>/dev/null |\
    grep --color -E "$FILE_NAME"
else
  # Don't highlight FILE_NAME
  "${FIND_CMD[@]}" 2>/dev/null
fi
