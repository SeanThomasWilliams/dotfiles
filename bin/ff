#!/usr/bin/env bash
# shellcheck disable=SC2068

set -eu -o pipefail

usage(){
  cat >&2 <<EOF
Find files matching a pattern

Usage: $0 [options] <FILE_NAME> [TARGET_DIR]

Arguments:
  FILE_NAME
    Partial file name
  TARGET_DIR
    Target directory to search within

Options:
  -a
    Search all files (even hidden files, except .git)
  -d
    Directory to search within (overridden by <TARGET_DIR>)
  -n
    Max directory depth to search
  -t
    Filetype (sh, py, etc)
  -h
    Show usage and exit
EOF
}

if [[ -n ${DEBUG-} ]]; then
  set -x
fi

TARGET_DIR=('.')
IGNORE_PATTERN='^\.[a-z]|/\.[a-z]'

while getopts ':ad:n:t:h' opt; do
  case "${opt}" in
    a)
      IGNORE_PATTERN='\.git'
      ;;
    d)
      TARGET_DIR=("${OPTARG}")
      ;;
    n)
      MAX_DEPTH="${OPTARG}"
      ;;
    t)
      FILE_TYPE="${OPTARG}"
      ;;
    h)
      usage
      exit 0
      ;;
    *)
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

if [[ $# -ge 1 ]]; then
  FILE_NAME="$1"
  shift
fi

if [[ $# -ge 1 ]]; then
  TARGET_DIR=("$@")
fi

# Construct FILE_GLOB
FILE_GLOB='*'
if [[ -n ${FILE_NAME-} ]]; then
  FILE_GLOB="*${FILE_NAME}*"
fi

if [[ -n ${FILE_TYPE-} ]]; then
  FILE_GLOB="${FILE_GLOB}.${FILE_TYPE}"
fi

# Set maxdepth if directed
FIND_GLOBAL_ARGS=(
  "${TARGET_DIR[@]}"
)

if [[ -n ${MAX_DEPTH-} ]]; then
  FIND_GLOBAL_ARGS+=(-maxdepth "$MAX_DEPTH")
fi

FIND_CMD=(
  find -L "${FIND_GLOBAL_ARGS[@]}"
  \( -type f -o -type l \)
  -ipath "$FILE_GLOB"
  -printf '%p\n'
)

if [[ -n ${FILE_NAME-} ]]; then
  # Find relevant files and strip the leading './'
  "${FIND_CMD[@]}" 2>/dev/null |\
    sed 's#^\./##' |\
    grep -Ev "${IGNORE_PATTERN}" |\
    grep --color "$FILE_NAME"
else
  # Don't highlight FILE_NAME
  "${FIND_CMD[@]}" 2>/dev/null |\
    sed 's#^\./##' |\
    grep -Ev "${IGNORE_PATTERN}"
fi
