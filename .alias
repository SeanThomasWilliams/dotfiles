#!/bin/bash
screenreattach(){
    if [[ $1 == "ls" ]]; then
        tmux list-sessions || screen -ls
    else
        SESSIONNAME=${1:-tmux}
        which tmux &> /dev/null
        if [ $? -eq 0 ]
        then
            tmux -2 new -A -s $SESSIONNAME
        else
            screen -R -d $SESSIONNAME
        fi
    fi
}
export -f screenreattach
alias sr="screenreattach"

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=9000
HISTFILESIZE=9000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

if [ -f $HOME/bin/git-completion.bash ] && ! shopt -oq posix; then
    . $HOME/bin/git-completion.bash
fi

export GIT_EDITOR="vim"
export GOMAXPROCS=8
export GOTRACEBACK="single"
if [[ -d /etc/alternatives/java_sdk ]]; then
    export JAVA_HOME="/etc/alternatives/java_sdk"
fi
export GOROOT="$HOME/software/go"
export GOPATH="$HOME/gocode"
export NOVETTA="$HOME/gocode/src/github.com/Novetta"
export ARES="$HOME/gocode/src/github.com/Novetta/pwcop"
export HYDRA="$HOME/gocode/src/github.com/Novetta/hydra"
export FISSION="$HOME/gocode/src/github.com/Novetta/fission"
export ITK="$HOME/gocode/src/github.com/Novetta/ITK"
export VIDEX="$HOME/gocode/src/github.com/Novetta/VideoEnterprise"
export GOBIN="$GOPATH/bin"
export GO_LOGGING_CONFIG="$HOME/logging.ini"
export PATH="/usr/local/bin:$HOME/anaconda3/bin:$HOME/bin/Sencha/Cmd:$JAVA_HOME/bin:/usr/local/bin:$HOME/bin:$GOROOT/bin:$GOBIN:$VIDEX/bin:/home/williamss/software/apache-maven-3.3.9/bin:$HOME/software/node-v6.10.3-linux-x64/bin:/home/williamss/gocode/src/github.com/xeedio/incubator-joshua/bin:$PATH"
export PROMPT_COMMAND="history -a; history -c; history -r; ${PROMPT_COMMAND}"
export EDITOR="/usr/bin/vim"
export C_COLON_BACKSLASH='C:${PWD//\//\\\}>'
export LD_LIBRARY_PATH="/usr/local/lib:/usr/local/cuda/lib64:$HOME/anaconda3/lib:$LD_LIBRARY_PATH"
alias cm="cd $NOVETTA/common"
alias dos='export PS1=$C_COLON_BACKSLASH'
alias dstatall='dstat -larm --top-io --top-latency'
alias fgrep="find . -type f | awk '!/CVS|\.class|\.jar|\.war|\.git|\.svn|_Stub|\.#/  {print \$0;}' | sed 's/\ /\\\ /g' | xargs grep --color=always -n "
alias gitpp="git pull --rebase && git push"
alias grepc="grep --color=always -i"
alias htop="TERM=screen htop"
alias itk="cd $ITK"
alias itkappbuild="cd $ITK/itkweb && sencha app build"
alias itkunittest="~/bin/watchcmd $ITK/itkserver $ITK/dev/rununittests.sh"
alias itkserver="source $ITK/dev/itk_dev.env && ~/bin/watchcmd $ITK/itkserver go run $ITK/itkserver/server/server.go"
alias ls="ls -hl"
alias nov="cd $NOVETTA"
alias pe="cd $NOVETTA/perseus"
alias videxappbuild="cd $VIDEX/videxweb && source ui.env && sencha app build"
alias videxunittest="~/bin/watchcmd $VIDEX/videxserver $VIDEX/dev/rununittests.sh"
alias videxserver="~/bin/watchcmd $VIDEX/videxserver go run $VIDEX/videxserver/server/server.go"
alias ve="cd $VIDEX"
alias vx="$VIDEX/dev/dev-run-executor.sh"
alias aresappbuild="cd $ARES/aresweb && sencha app build"
alias aresunittest="~/bin/watchcmd $ARES/aresserver $ARES/dev/rununittests.sh"
alias aresserver="source $ARES/dev/ares_dev.env && ~/bin/watchcmd $ARES/aresserver go run $ARES/aresserver/server/server.go"
alias ar="cd $ARES"
alias hydraappbuild="cd $HYDRA/hydraweb && sencha app build"
alias hydraunittest="~/bin/watchcmd $HYDRA/hydraserver $HYDRA/dev/rununittests.sh"
alias hydraserver="source $HYDRA/dev/hydra_dev.env && source ~/.hydra && ~/bin/watchcmd $HYDRA/hydraserver go run $HYDRA/hydraserver/server/server.go"
alias fis="cd $FISSION"
alias hy="cd $HYDRA"
alias xe="cd $GOPATH/src/github.com/xeedio"
alias docker="sudo docker"
which nvim &> /dev/null && alias vim="nvim"
which gtimeout &> /dev/null && alias timeout="gtimeout"

if [[ -f "$HOME/.videx.env" ]]; then
    source $HOME/.videx.env
fi

if [[ -f "$HOME/.local.alias" ]]; then
    source $HOME/.local.alias
fi

if [[ -f /usr/local/etc/profile.d/autojump.sh ]]; then
    source /usr/local/etc/profile.d/autojump.sh
fi
