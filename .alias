#!/bin/bash

screen-reattach(){
    SESSIONNAME=${1:-tmux}
    which tmux &> /dev/null
    if [ $? -eq 0 ]
    then
        tmux -2 new -A -s $SESSIONNAME
    else
        screen -R -d $SESSIONNAME
    fi
}
export -f screen-reattach
alias sr="screen-reattach"

export GIT_EDITOR="vim"
export GOMAXPROCS=8
export GOTRACEBACK="single"
export TERM=xterm-256color
export JAVA_HOME="/usr/lib/jvm/latest"
export GOROOT="/usr/lib/golang"
export GOPATH="$HOME/gocode"
export NOVETTA="$HOME/gocode/src/github.com/Novetta"
export ARES="$HOME/gocode/src/github.com/Novetta/pwcop"
export HYDRA="$HOME/gocode/src/github.com/Novetta/hydra"
export ITK="$HOME/gocode/src/github.com/Novetta/ITK"
export VIDEX="$HOME/gocode/src/github.com/Novetta/VideoEnterprise"
export GOBIN="$GOPATH/bin"
export GO_LOGGING_CONFIG="$HOME/logging.ini"
export PATH="$HOME/bin/Sencha/Cmd:$JAVA_HOME/bin:/usr/local/bin:$HOME/bin:$GOROOT/bin:$GOBIN:$VIDEX/bin:$PATH"
export PROMPT_COMMAND="history -a; history -c; history -r; ${PROMPT_COMMAND}"
export EDITOR="/usr/bin/vim"
export C_COLON_BACKSLASH='C:${PWD//\//\\\}>'
export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
export HISTSIZE=
export HISTFILESIZE=
export HISTFILE="$HOME/.bash_eternal_history"
alias cm="cd $NOVETTA/common"
alias dos='export PS1=$C_COLON_BACKSLASH'
alias dstatall='dstat -larm --top-io --top-latency 10'
alias fgrep="find . -type f | awk '!/CVS|\.git|\.svn|_Stub|\.#/  {print \$0;}' | sed 's/\ /\\\ /g' | xargs grep --color=always -in "
alias gitpp="git pull --rebase && git push"
alias grepc="grep --color=always -i"
alias htop="TERM=screen htop"
alias itk="cd $ITK"
alias itkappbuild="cd $ITK/itkweb && sencha app build"
alias itkunittest="~/bin/watchcmd $ITK/itkserver $ITK/dev/rununittests.sh"
alias itkserver="source $ITK/dev/itk_dev.env && ~/bin/watchcmd $ITK/itkserver go run $ITK/itkserver/server/server.go"
alias ls="ls -hl --color"
alias nov="cd $NOVETTA"
alias pe="cd $NOVETTA/perseus"
alias videxappbuild="cd $VIDEX/videx2/videxweb && source ui.env && sencha app build"
alias videxunittest="~/bin/watchcmd $VIDEX/videx2/videxserver $VIDEX/videx2/dev/rununittests.sh"
alias videxserver="~/bin/watchcmd $VIDEX/videx2/videxserver go run $VIDEX/videx2/videxserver/server/server.go"
alias ve="cd $VIDEX/videx2"
alias vx="$VIDEX/videx2/dev/dev-run-executor.sh"
alias aresappbuild="cd $ARES/aresweb && sencha app build"
alias aresunittest="~/bin/watchcmd $ARES/aresserver $ARES/dev/rununittests.sh"
alias aresserver="source $ARES/dev/ares_dev.env && ~/bin/watchcmd $ARES/aresserver go run $ARES/aresserver/server/server.go"
alias ar="cd $ARES"
alias hydraappbuild="cd $HYDRA/hydraweb && sencha app build"
alias hydraunittest="~/bin/watchcmd $HYDRA/hydraserver $HYDRA/dev/rununittests.sh"
alias hydraserver="source $HYDRA/dev/hydra_dev.env && source ~/.hydra && ~/bin/watchcmd $HYDRA/hydraserver go run $HYDRA/hydraserver/server/server.go"
alias hy="cd $HYDRA"
which nvim &> /dev/null && alias vim="nvim"

export PATH=/opt/rh/python27/root/usr/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/opt/rh/python27/root/usr/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export MANPATH=/opt/rh/python27/root/usr/share/man:${MANPATH}
# # For pkg-config
export PKG_CONFIG_PATH=/opt/rh/python27/root/usr/lib64/pkgconfig${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}
export PYTHONPATH=/usr/lib/python2.7/site-packages:/opt/rh/python27/root/usr/lib64/python2.7/site-packages

if [[ -f "$HOME/.videx.env" ]]; then
    source $HOME/.videx.env
fi

if [[ -f "$HOME/.local.alias" ]]; then
    source $HOME/.local.alias
fi

# presumably you already have a .gnupg directory, but this won't hurt even if you do
mkdir -p -m 700 ~/.gnupg

# And give gpg-agent a whirl:
export GPG_AGENT_INFO=$HOME/.gnupg/S.gpg-agent:42:1
gpg-connect-agent /bye &>/dev/null || gpg-agent --daemon --enable-ssh-support --write-env-file "${HOME}/.gpg-agent-info" &>/dev/null

#Create the necessary environment variables
if [ -f "${HOME}/.gpg-agent-info" ]; then
    . "${HOME}/.gpg-agent-info"
    export SSH_AUTH_SOCK
    export SSH_AGENT_PID
fi
